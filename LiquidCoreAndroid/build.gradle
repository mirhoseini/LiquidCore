apply plugin: 'com.android.library'
apply plugin: 'jacoco'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 19
        versionCode 4
        versionName "0.4.0"
        setProperty("archivesBaseName", "LiquidCore")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //multiDexEnabled true
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11 -fexceptions"
                abiFilters "armeabi-v7a", "arm64-v8a"//, "x86", "x86_64"
            }
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled = false
            minifyEnabled false
            sourceSets {
                main {
                    jni.srcDirs = []
                    jniLibs.srcDirs = [ '../deps/node-8.9.3/prebuilt/symbols' ]
                }
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            sourceSets {
                main {
                    jni.srcDirs = []
                    jniLibs.srcDirs = [ '../deps/node-8.9.3/prebuilt/nosymbols' ]
                }
            }
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a'//, 'x86', 'x86_64'
            universalApk true
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    debugImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    androidTestImplementation 'com.android.support:support-annotations:27.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


apply plugin: 'com.github.dcendents.android-maven'

group='com.github.liquidplayer'